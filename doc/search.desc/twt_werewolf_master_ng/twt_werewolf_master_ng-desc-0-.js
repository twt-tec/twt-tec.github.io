searchState.loadedDescShard("twt_werewolf_master_ng", 0, "基本介绍\n法官。获得服务器端各种设置并主持游戏。\n玩家端。\n法官类型。\n持有 <code>Responder</code> 特型对象的所有权。\n由指向 <code>Responder</code> 的引用构成的向量。\n随机分配角色。\n先接入人类用户，再接入指定数目的 …\n计算使用豆包大模型产生的成本。 …\n主持白天的审判法庭。传入所有用户。\n…\n…\nReturns the argument unchanged.\n设置绑定地址和接入角色。\n…\n获取角色和 AI 的数量。\n获取所有设置。\n服务端程序入口。\nCalls <code>U::from(self)</code>.\n判断游戏是否结束。\n对每个 <code>RoleGroup</code> 调用 <code>night</code> …\n…\n循环处理白天黑夜，结束时计算开销。\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n…\n…\n…\n…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n把身份转换成对应 <code>RoleGroup</code> 对象。\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n定义响应器特型。 …\n…\n…\n接收一条原始信息。ai …\n接收一个数字。\n接收文本。文本会被以 <code>t</code> 开头标记。\n发送原始信息。ai 玩家不需要原始信息。\n表示和一个应答者通话的开始。\n表示一次等待的结束作为结束。\n传入原始 json 字符串，会被标记为 <code>j</code> 发送。\n…\n默认实现发送数字，开头以 <code>n</code> 标记。\n投票。返回 (详情字符串, 选票指向的 id)。 …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n向大模型 api 请求并获得回应。\nReturns the argument unchanged.\n…\nCalls <code>U::from(self)</code>.\n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>TcpStream</code> …\n给已连接玩家发送一个 <code>+</code> …\n发送已连接玩家数和总玩家数。\nchat 内筛选死活。\n进行计数，返回的是 <code>Vec&lt;(编号, 数量)&gt;</code>。\n进行一次投票。结果格式为 …\n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n没有分配角色前的角色。\n…\n清空屏幕。\n实现底层通讯。\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n检查游戏是否结束。\n收到信息的类型。\n接收一次开始信号。\n接收一次结束信号\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n接收一条消息。TcpStream …\n接收原始信息。\n…\n接收消息，用 <code>Message</code> 封装好。\n发送原始信息。\n发送 <code>Message</code> 封装好的信息。\n方便从消息中获得原始信息和 json 字符串。\n回应单次投票。\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")